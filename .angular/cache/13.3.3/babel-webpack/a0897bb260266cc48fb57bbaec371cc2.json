{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let AccordionsComponent = /*#__PURE__*/(() => {\n  class AccordionsComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  AccordionsComponent.ɵfac = function AccordionsComponent_Factory(t) {\n    return new (t || AccordionsComponent)();\n  };\n\n  AccordionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccordionsComponent,\n    selectors: [[\"app-blockquotes\"]],\n    decls: 119,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"col\", \"p-4\"], [1, \"card\", \"mb-2\"], [1, \"card-body\"], [1, \"card-title\", \"text-center\", \"text-primary\"], [\"id\", \"accordionExample\", 1, \"accordion\"], [1, \"accordion-item\"], [\"id\", \"headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseOne\", \"aria-expanded\", \"true\", \"aria-controls\", \"collapseOne\", 1, \"accordion-button\"], [\"id\", \"collapseOne\", \"aria-labelledby\", \"headingOne\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\", \"show\"], [1, \"accordion-body\"], [\"id\", \"headingTwo\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseTwo\", \"aria-labelledby\", \"headingTwo\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"headingThree\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseThree\", \"aria-labelledby\", \"headingThree\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"accordionFlushExample\", 1, \"accordion\", \"accordion-flush\"], [\"id\", \"flush-headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseOne\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseOne\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseOne\", \"aria-labelledby\", \"flush-headingOne\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"flush-headingTwo\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseTwo\", \"aria-labelledby\", \"flush-headingTwo\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"flush-headingThree\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#flush-collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"flush-collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"flush-collapseThree\", \"aria-labelledby\", \"flush-headingThree\", \"data-bs-parent\", \"#accordionFlushExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"accordionPanelsStayOpenExample\", 1, \"accordion\"], [\"id\", \"panelsStayOpen-headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#panelsStayOpen-collapseOne\", \"aria-expanded\", \"true\", \"aria-controls\", \"panelsStayOpen-collapseOne\", 1, \"accordion-button\"], [\"id\", \"panelsStayOpen-collapseOne\", \"aria-labelledby\", \"panelsStayOpen-headingOne\", 1, \"accordion-collapse\", \"collapse\", \"show\"], [\"id\", \"panelsStayOpen-headingTwo\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#panelsStayOpen-collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"panelsStayOpen-collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"panelsStayOpen-collapseTwo\", \"aria-labelledby\", \"panelsStayOpen-headingTwo\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"panelsStayOpen-headingThree\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#panelsStayOpen-collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"panelsStayOpen-collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"panelsStayOpen-collapseThree\", \"aria-labelledby\", \"panelsStayOpen-headingThree\", 1, \"accordion-collapse\", \"collapse\"]],\n    template: function AccordionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Standard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"h2\", 7)(9, \"button\", 8);\n        i0.ɵɵtext(10, \" Accordion Item #1 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"strong\");\n        i0.ɵɵtext(14, \"This is the first item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(16, \"code\");\n        i0.ɵɵtext(17, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"h2\", 11)(21, \"button\", 12);\n        i0.ɵɵtext(22, \" Accordion Item #2 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 13)(24, \"div\", 10)(25, \"strong\");\n        i0.ɵɵtext(26, \"This is the second item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(27, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(28, \"code\");\n        i0.ɵɵtext(29, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"div\", 6)(32, \"h2\", 14)(33, \"button\", 15);\n        i0.ɵɵtext(34, \" Accordion Item #3 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 16)(36, \"div\", 10)(37, \"strong\");\n        i0.ɵɵtext(38, \"This is the third item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(39, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(40, \"code\");\n        i0.ɵɵtext(41, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(42, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(43, \"div\", 2)(44, \"div\", 3)(45, \"h1\", 4);\n        i0.ɵɵtext(46, \"Flush\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 17)(48, \"div\", 6)(49, \"h2\", 18)(50, \"button\", 19);\n        i0.ɵɵtext(51, \" Accordion Item #1 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(52, \"div\", 20)(53, \"div\", 10);\n        i0.ɵɵtext(54, \"Placeholder content for this accordion, which is intended to demonstrate the \");\n        i0.ɵɵelementStart(55, \"code\");\n        i0.ɵɵtext(56, \".accordion-flush\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(57, \" class. This is the first item's accordion body.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(58, \"div\", 6)(59, \"h2\", 21)(60, \"button\", 22);\n        i0.ɵɵtext(61, \" Accordion Item #2 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(62, \"div\", 23)(63, \"div\", 10);\n        i0.ɵɵtext(64, \"Placeholder content for this accordion, which is intended to demonstrate the \");\n        i0.ɵɵelementStart(65, \"code\");\n        i0.ɵɵtext(66, \".accordion-flush\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(67, \" class. This is the second item's accordion body. Let's imagine this being filled with some actual content.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(68, \"div\", 6)(69, \"h2\", 24)(70, \"button\", 25);\n        i0.ɵɵtext(71, \" Accordion Item #3 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(72, \"div\", 26)(73, \"div\", 10);\n        i0.ɵɵtext(74, \"Placeholder content for this accordion, which is intended to demonstrate the \");\n        i0.ɵɵelementStart(75, \"code\");\n        i0.ɵɵtext(76, \".accordion-flush\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(77, \" class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(78, \"div\", 2)(79, \"div\", 3)(80, \"h1\", 4);\n        i0.ɵɵtext(81, \"Always open\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"div\", 27)(83, \"div\", 6)(84, \"h2\", 28)(85, \"button\", 29);\n        i0.ɵɵtext(86, \" Accordion Item #1 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(87, \"div\", 30)(88, \"div\", 10)(89, \"strong\");\n        i0.ɵɵtext(90, \"This is the first item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(91, \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(92, \"code\");\n        i0.ɵɵtext(93, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(94, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(95, \"div\", 6)(96, \"h2\", 31)(97, \"button\", 32);\n        i0.ɵɵtext(98, \" Accordion Item #2 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(99, \"div\", 33)(100, \"div\", 10)(101, \"strong\");\n        i0.ɵɵtext(102, \"This is the second item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(103, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(104, \"code\");\n        i0.ɵɵtext(105, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(106, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(107, \"div\", 6)(108, \"h2\", 34)(109, \"button\", 35);\n        i0.ɵɵtext(110, \" Accordion Item #3 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(111, \"div\", 36)(112, \"div\", 10)(113, \"strong\");\n        i0.ɵɵtext(114, \"This is the third item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(115, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(116, \"code\");\n        i0.ɵɵtext(117, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(118, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n    },\n    styles: [\"\"]\n  });\n  return AccordionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}